# Server block for handling HTTP traffic
server {
    listen 80;
    server_name expenses.smartvizz.com;

    # This location is used for the Let's Encrypt challenge
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;  # This path should match --webroot-path in Certbot command
        allow all;
    }

    # Redirect all other HTTP traffic to HTTPS
    location / {
        return 301 https://$host$request_uri;
    }
}

# Server block for handling HTTPS traffic
server {
    listen 443 ssl http2;
    server_name expenses.smartvizz.com;

    # SSL configuration
    ssl_certificate /etc/letsencrypt/live/expenses.smartvizz.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/expenses.smartvizz.com/privkey.pem;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_ciphers "ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384";

    # HSTS (HTTP Strict Transport Security) to enforce secure connections
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;

    # Enable OCSP Stapling to speed up SSL verification
    ssl_stapling on;
    ssl_stapling_verify on;
    resolver 1.1.1.1 8.8.8.8 valid=300s;
    resolver_timeout 5s;

    # CORS settings for API requests
    location /api {
        proxy_pass http://backend:8080;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # CORS headers
        add_header 'Access-Control-Allow-Origin' 'https://expenses.smartvizz.com' always;
        add_header 'Access-Control-Allow-Credentials' 'true' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type, Accept' always;

        # Handle preflight requests
        if ($request_method = OPTIONS) {
            return 204;
        }
    }

    # Redirect phpmyadmin without trailing slash to with trailing slash
    location = /phpmyadmin {
        return 301 $scheme://$host/phpmyadmin/;
    }

    # Proxy settings for /phpmyadmin/
    location /phpmyadmin/ {
        proxy_pass http://phpmyadmin:80/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # CORS headers for phpmyadmin
        add_header 'Access-Control-Allow-Origin' 'https://expenses.smartvizz.com' always;
        add_header 'Access-Control-Allow-Credentials' 'true' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type, Accept' always;

        # Handle preflight requests
        if ($request_method = OPTIONS) {
            return 204;
        }
    }

    # Serve static files directly, bypassing the application server
    location /static/ {
        alias /path/to/static/files/;  # Replace with the actual path to static files
        expires 30d;
        add_header Cache-Control "public, max-age=2592000, immutable";
    }

    # Catch all traffic that does not match the above and send to the frontend
    location / {
        try_files $uri $uri/ @frontend;

        # CORS headers for frontend
        add_header 'Access-Control-Allow-Origin' 'https://expenses.smartvizz.com' always;
        add_header 'Access-Control-Allow-Credentials' 'true' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type, Accept' always;

        # Handle preflight requests
        if ($request_method = OPTIONS) {
            return 204;
        }
    }

    # Frontend proxy
    location @frontend {
        proxy_pass http://frontend:4200;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # CORS headers for frontend
        add_header 'Access-Control-Allow-Origin' 'https://expenses.smartvizz.com' always;
        add_header 'Access-Control-Allow-Credentials' 'true' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type, Accept' always;

        # Handle preflight requests
        if ($request_method = OPTIONS) {
            return 204;
        }
    }
}
